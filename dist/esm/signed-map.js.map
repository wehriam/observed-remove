{"version":3,"sources":["../../src/signed-map.js"],"names":["ObservedRemoveMap","getVerifier","InvalidSignatureError","SignedObservedRemoveMap","constructor","entries","options","key","Error","verify","format","insertionSignatureMap","Map","deletionSignatureMap","value","id","signature","setSigned","dump","insertQueue","deleteQueue","signedInsertQueue","map","get","JSON","stringify","signedDeleteQueue","queue","flush","now","Date","deletions","timestamp","parseInt","slice","maxAge","delete","process","signedQueue","skipFlush","set","pair","pairs","message","push","dequeue","deleteSigned","clear"],"mappings":"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","sourcesContent":["// @flow\n\nimport ObservedRemoveMap from './map';\nimport getVerifier from './verifier';\nimport { InvalidSignatureError } from './signed-error';\n\ntype Options = {\n  maxAge?:number,\n  bufferPublishing?:number,\n  key: any,\n  format?: string\n};\n\nexport default class SignedObservedRemoveMap<K, V> extends ObservedRemoveMap<K, V> {\n  constructor(entries?: Iterable<[K, V, string, string]>, options?:Options) {\n    super([], options);\n    if (!options || !options.key) {\n      throw new Error('Missing required options.key parameter');\n    }\n    this.verify = getVerifier(options.key, options.format);\n    this.insertionSignatureMap = new Map();\n    this.deletionSignatureMap = new Map();\n    if (!entries) {\n      return;\n    }\n    for (const [key, value, id, signature] of entries) {\n      this.setSigned(key, value, id, signature);\n    }\n  }\n\n  declare insertionSignatureMap: Map<string, string>;\n  declare deletionSignatureMap: Map<string, string>;\n  declare verify: (string, ...Array<any>) => boolean;\n\n  dump():[Array<*>, Array<*>] {\n    const [insertQueue, deleteQueue] = super.dump();\n    const signedInsertQueue = insertQueue.map(([key, [id, value]]) => {\n      const signature = this.insertionSignatureMap.get(id);\n      if (!signature) {\n        throw new Error(`Missing signature for insertion key \"${JSON.stringify(key)}\" with id \"${id}\" and value \"${JSON.stringify(value)}\"`);\n      }\n      return [signature, id, key, value];\n    });\n    const signedDeleteQueue = deleteQueue.map(([id, key]) => {\n      const signature = this.deletionSignatureMap.get(id);\n      if (!signature) {\n        throw new Error(`Missing signature for deletion key \"${JSON.stringify(key)}\" with id \"${id}\"`);\n      }\n      return [signature, id, key];\n    });\n    const queue = [signedInsertQueue, signedDeleteQueue];\n    return queue;\n  }\n\n  flush() {\n    const now = Date.now();\n    for (const [id] of this.deletions) {\n      const timestamp = parseInt(id.slice(0, 9), 36);\n      if (now - timestamp >= this.maxAge) {\n        this.deletions.delete(id);\n        this.deletionSignatureMap.delete(id);\n      }\n    }\n  }\n\n  process(signedQueue:[Array<*>, Array<*>], skipFlush?: boolean = false):void {\n    const [signedInsertQueue, signedDeleteQueue] = signedQueue;\n    const insertQueue = signedInsertQueue.map(([signature, id, key, value]) => {\n      if (!this.verify(signature, key, value, id)) {\n        throw new InvalidSignatureError(`Signature does not match for key \"${key}\" with value ${JSON.stringify(value)}`);\n      }\n      this.insertionSignatureMap.set(id, signature);\n      return [key, [id, value]];\n    });\n    const deleteQueue = signedDeleteQueue.map(([signature, id, key]) => {\n      if (!this.verify(signature, key, id)) {\n        throw new InvalidSignatureError(`Signature does not match for id ${JSON.stringify(id)}`);\n      }\n      this.deletionSignatureMap.set(id, signature);\n      return [id, key];\n    });\n    const queue:[Array<[K, [string, V]]>, Array<[string, K]>] = [insertQueue, deleteQueue];\n    super.process(queue, skipFlush);\n    for (const [signature, id, key] of signedInsertQueue) { // eslint-disable-line no-unused-vars\n      const pair = this.pairs.get(key);\n      if (!pair || pair[0] !== id) {\n        this.insertionSignatureMap.delete(id);\n      }\n    }\n  }\n\n  setSigned(key:K, value:V, id:string, signature:string) {\n    const message = [signature, id, key, value];\n    this.process([[message], []], true);\n    this.insertQueue.push(message);\n    this.dequeue();\n    return this;\n  }\n\n  deleteSigned(key:K, id:string, signature:string) {\n    const message = [signature, id, key];\n    this.process([[], [message]], true);\n    this.deleteQueue.push(message);\n    this.dequeue();\n  }\n\n  clear() {\n    throw new Error('Unsupported method clear()');\n  }\n\n  set() {\n    throw new Error('Unsupported method set(), use setSigned()');\n  }\n\n  delete() {\n    throw new Error('Unsupported method delete(), use deleteSignedId()');\n  }\n}\n"],"file":"signed-map.js"}