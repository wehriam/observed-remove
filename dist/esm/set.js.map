{"version":3,"sources":["../../src/set.js"],"names":["hash32","EventEmitter","generateId","ObservedRemoveSet","constructor","entries","options","maxAge","bufferPublishing","publishTimeout","pairs","Map","deletions","insertQueue","deleteQueue","value","add","Symbol","iterator","pair","values","dequeue","setTimeout","publish","sync","queue","dump","emit","flush","maxAgeString","Date","now","toString","padStart","id","delete","process","skipFlush","insertions","hash","set","has","get","undefined","insertMessage","deleteMessage","push","message","clear","forEach","callback","thisArg","bind","activeIds","keys","size","module","exports"],"mappings":"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","sourcesContent":["// @flow\n\nimport { hash32 } from '@bunchtogether/hash-object';\nimport EventEmitter from 'events';\nimport generateId from './generate-id';\n\n\ntype Options = {\n  maxAge?:number,\n  bufferPublishing?:number\n};\n\n/**\n * Class representing an observed-remove set\n *\n * Implements all methods and iterators of the native `Set` object in addition to the following.\n * See: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set}\n */\nclass ObservedRemoveSet<T> extends EventEmitter {\n  declare maxAge: number;\n  declare bufferPublishing: number;\n  declare pairs: Map<string, [string, T]>;\n  declare deletions: Map<string, string>;\n  declare deleteQueue: Array<*>;\n  declare insertQueue: Array<*>;\n  declare publishTimeout: null | TimeoutID;\n\n  /**\n   * Create an observed-remove set.\n   * @param {Iterable<T>} [entries=[]] Iterable of initial values\n   * @param {Object} [options={}]\n   * @param {String} [options.maxAge=5000] Max age of insertion/deletion identifiers\n   * @param {String} [options.bufferPublishing=20] Interval by which to buffer 'publish' events\n   */\n  constructor(entries?: Iterable<T>, options?:Options = {}) {\n    super();\n    this.maxAge = typeof options.maxAge === 'undefined' ? 5000 : options.maxAge;\n    this.bufferPublishing = typeof options.bufferPublishing === 'undefined' ? 30 : options.bufferPublishing;\n    this.publishTimeout = null;\n    this.pairs = new Map();\n    this.deletions = new Map();\n    this.insertQueue = [];\n    this.deleteQueue = [];\n    if (!entries) {\n      return;\n    }\n    for (const value of entries) {\n      this.add(value);\n    }\n  }\n\n  /* :: @@iterator(): Iterator<T> { return ({}: any); } */\n  // $FlowFixMe: computed property\n  * [Symbol.iterator]() {\n    for (const pair of this.pairs.values()) {\n      yield pair[1];\n    }\n  }\n\n  dequeue() {\n    if (this.publishTimeout) {\n      return;\n    }\n    if (this.bufferPublishing > 0) {\n      this.publishTimeout = setTimeout(() => this.publish(), this.bufferPublishing);\n    } else {\n      this.publish();\n    }\n  }\n\n  publish() {\n    this.publishTimeout = null;\n    const insertQueue = this.insertQueue;\n    const deleteQueue = this.deleteQueue;\n    this.insertQueue = [];\n    this.deleteQueue = [];\n    this.sync([insertQueue, deleteQueue]);\n  }\n\n  /**\n   * Emit a 'publish' event containing a specified queue or all of the set's insertions and deletions.\n   * @param {Array<Array<any>>} queue - Array of insertions and deletions\n   * @return {void}\n   */\n  sync(queue?: [Array<*>, Array<*>] = this.dump()) {\n    this.emit('publish', queue);\n  }\n\n  flush() {\n    const maxAgeString = (Date.now() - this.maxAge).toString(36).padStart(9, '0');\n    for (const [id] of this.deletions) {\n      if (id < maxAgeString) {\n        this.deletions.delete(id);\n      }\n    }\n  }\n\n  /**\n   * Return an array containing all of the set's insertions and deletions.\n   * @return {[Array<*>, Array<*>]>}\n   */\n  dump():[Array<*>, Array<*>] {\n    return [[...this.pairs], [...this.deletions]];\n  }\n\n  /**\n   * Process an array of insertion and deletions.\n   * @param {Array<Array<any>>} queue - Array of insertions and deletions\n   * @return {void}\n   */\n  process(queue:[Array<*>, Array<*>], skipFlush?: boolean = false) {\n    const [insertions, deletions] = queue;\n    for (const [id, hash] of deletions) {\n      this.deletions.set(id, hash);\n    }\n    for (const [hash, [id, value]] of insertions) {\n      if (this.deletions.has(id)) {\n        continue;\n      }\n      const pair = this.pairs.get(hash);\n      if (!pair || (pair && pair[0] < id)) {\n        this.pairs.set(hash, [id, value]);\n        if (!pair) {\n          this.emit('add', value, pair ? pair[1] : undefined);\n        }\n      }\n    }\n    for (const [id, hash] of deletions) {\n      const pair = this.pairs.get(hash);\n      if (pair && pair[0] === id) {\n        this.pairs.delete(hash);\n        this.emit('delete', pair[1]);\n      }\n    }\n    if (!skipFlush) {\n      this.flush();\n    }\n  }\n\n  add(value:T, id?:string = generateId()) {\n    const hash = this.hash(value);\n    const pair = this.pairs.get(hash);\n    const insertMessage = [hash, [id, value]];\n    if (pair) {\n      const deleteMessage = [pair[0], hash];\n      this.process([[insertMessage], [deleteMessage]], true);\n      this.deleteQueue.push(deleteMessage);\n    } else {\n      this.process([[insertMessage], []], true);\n    }\n    this.insertQueue.push(insertMessage);\n    this.dequeue();\n    return this;\n  }\n\n  delete(value:T) {\n    const hash = this.hash(value);\n    const pair = this.pairs.get(hash);\n    if (pair) {\n      const message = [pair[0], hash];\n      this.process([[], [message]], true);\n      this.deleteQueue.push(message);\n      this.dequeue();\n    }\n  }\n\n  clear() {\n    for (const value of this) {\n      this.delete(value);\n    }\n  }\n\n  * entries():Iterator<[T, T]> {\n    for (const [id, value] of this.pairs.values()) { // eslint-disable-line no-unused-vars\n      yield [value, value];\n    }\n  }\n\n  forEach(callback:Function, thisArg?:any) {\n    if (thisArg) {\n      for (const value of this.pairs.values()) {\n        callback.bind(thisArg)(value, value, this);\n      }\n    } else {\n      for (const value of this.pairs.values()) {\n        callback(value, value, this);\n      }\n    }\n  }\n\n  has(value:T):boolean {\n    return !!this.pairs.get(this.hash(value));\n  }\n\n  activeIds(value:T):Array<string> {\n    const hash = this.hash(value);\n    const pair = this.pairs.get(hash);\n    if (!pair) {\n      return [];\n    }\n    return [pair[0]];\n  }\n\n  * keys():Iterator<T> {\n    for (const [id, value] of this.pairs.values()) { // eslint-disable-line no-unused-vars\n      yield value;\n    }\n  }\n\n  * values():Iterator<T> {\n    for (const [id, value] of this.pairs.values()) { // eslint-disable-line no-unused-vars\n      yield value;\n    }\n  }\n\n  hash(value:T):string {\n    return hash32(value);\n  }\n\n  get size():number {\n    return this.pairs.size;\n  }\n}\n\nmodule.exports = ObservedRemoveSet;\n"],"file":"set.js"}